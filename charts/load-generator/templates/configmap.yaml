apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "load-generator.fullname" . }}
data:
  load.js: |
    import http from "k6/http";
    import { check, fail } from "k6";
    import { Rate } from "k6/metrics";

    export let options = {
        noConnectionReuse: true,
        thresholds: {
            "errors": ["rate<0.05"]
        }
    };

    export let url = {{ .Values.testURL | quote }}
    export let errorRate = new Rate("errors");

    //Choose what letter this pod votes for
    var voteLetter = ''
    var choice = Math.random() >= 0.5;

    if (choice) {
        voteLetter = 'a'
    } else {
        voteLetter = 'b'
    }

    let vote = {
        "vote": voteLetter
    }

    export default function() {
        let params = {
            headers: {
                        "User-Agent": "k6"
                     },
            redirects: 5,
            tags: { "k6test": "yes" }
        };
        let jar = http.cookieJar();
        jar.set(url, "testing", "always");

        let res = http.post(url, vote,  params );

        errorRate.add(res.status != 200);
        check(res, {
            "Status 200": (r) => r.status === 200
        });
    };
