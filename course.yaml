namespace: infra
repository: stable
minimum_versions:
  helm: 2.12.3
  reckoner: 1.0.1
repositories:
  incubator:
    url: https://kubernetes-charts-incubator.storage.googleapis.com
  stable:
    url: https://kubernetes-charts.storage.googleapis.com
  influx:
    url: http://influx-charts.storage.googleapis.com
  reactiveops-stable:
    url: https://charts.reactiveops.com/stable
charts:
  prometheus-adapter:
    repository: stable
    namespace: linkerd
    files:
      - ./manifests/prometheus-adapter.values.yml
  cert-manager:
    version: "v0.6.0"
    namespace: cert-manager
    hooks:
      pre_install:
        - kubectl create ns cert-manager > /dev/null 2>&1 || true
        - kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true > /dev/null 2>&1 || true
          # - kubectl annotate ns cert-manager linkerd.io/inject=enabled --overwrite
        - kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.6/deploy/manifests/00-crds.yaml
      post_install:
        - sleep 20 && kubectl apply -f manifests/letsencrypt-prod.yaml
    set-values:
      ingressShim:
        defaultIssuerName: letsencrypt-prod
        defaultIssuerKind: ClusterIssuer
        defaultACMEChallengeType: dns01
        defaultACMEDNS01ChallengeProvider: cloudflare
        resources:
          requests.cpu: 10m
          requests.memory: 32Mi
          limits.cpu: 15m
          limits.memory: 64Mi
      resources:
        requests.cpu: 10m
        requests.memory: 50Mi
        limits.cpu: 15m
        limits.memory: 100Mi
  rbac-manager:
    namespace: rbac-manager
    version: 0.2.1
    repository: reactiveops-stable
    hooks:
      pre_install:
        - kubectl create ns rbac-manager > /dev/null 2>&1 || true
        - kubectl annotate ns rbac-manager linkerd.io/inject=enabled --overwrite
      post_install:
        - kubectl apply -f manifests/tiller-user-clusterrole.yaml
        - kubectl apply -f manifests/circleci-clusterrole.yaml
        - kubectl apply -f manifests/rbacdefinition.yaml
  external-dns:
    namespace: external-dns
    hooks:
      pre_install:
        - kubectl create ns external-dns > /dev/null 2>&1 || true
        - kubectl annotate ns external-dns linkerd.io/inject=enabled --overwrite
    version: "1.6.1"
    set-values:
      resources.requests.cpu: 10m
      resources.requests.memory: 50Mi
      domainFilters[0]: sudermanjr.com
      txtOwnerId: reckoner-demo
      rbac.create: true
      provider: cloudflare
      policy: sync
      cloudflare.proxied: false
      extraEnv:
        - name: CF_API_EMAIL
          value: andrew@suderman.us.com
        - name: CF_API_KEY
          valueFrom:
            secretKeyRef:
              name: cloudflare-api-key-secret
              key: api-key
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65534 # 65534 is nobody - revise aws.credentialsPath when changing uid
        capabilities:
          drop: ["ALL"]
  nginx-ingress:
    chart: nginx-ingress
    namespace: nginx-ingress
    version: 1.3.1
    hooks:
      pre_install:
        - kubectl create ns nginx-ingress > /dev/null 2>&1 || true
        - kubectl annotate ns nginx-ingress linkerd.io/inject=enabled --overwrite
        - kubectl -n nginx-ingress apply -f manifests/custom-headers.yaml
    set-values:
      controller.minAvailable: 1
      controller.replicaCount: 2
      defaultBackend.replicaCount: 2
      defaultBackend.minAvailable: 1
      controller.ingressClass: "nginx-ingress"
      controller.publishService.enabled: "true"
      controller.metrics.enabled: true
      controller.stats.enabled: true
      controller.resources:
        limits.cpu: 500m
        limits.memory: 500Mi
        requests.cpu: 100m
        requests.memory: 100Mi
      rbac.create: true
      controller.podLabels.nginx-affinity: nginx-ingress
      controller.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].key: nginx-affinity
      controller.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].operator: In
      controller.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].values[0]: nginx-ingress
      controller.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: "kubernetes.io/hostname"
      controller.image.pullPolicy: "Always"
    values-strings:
      controller.livenessProbe.initialDelaySeconds: 900
      controller:
        extraArgs:
          v: 2
        config:
          add-headers: "nginx-ingress/custom-headers"
          woker-shutdown-timeout: "300s"
      controller.podAnnotations:
        ad\.datadoghq\.com/nginx-ingress-controller\.check_names: |
          ["nginx"]
        ad\.datadoghq\.com/nginx-ingress-controller\.init_configs: |
          [{}]
        ad\.datadoghq\.com/nginx-ingress-controller\.instances: |
          [
            {
               "nginx_status_url": "http://%%host%%:18080/nginx_status"\,
               "tags": "%%tags%%"
            }
          ]
######################################
## TICK Stack for Load Testing Data ##
######################################
  data:
    namespace: tick
    hooks:
      pre_install:
        - kubectl create ns tick > /dev/null 2>&1 || true
        - kubectl annotate ns tick linkerd.io/inject=enabled --overwrite
    chart: influxdb
    version: 1.7.4
    repository: influx
  dash:
    chart: chronograf
    namespace: tick
    version: 1.7.8
    repository: influx
    set-values:
      ingress.enabled: false
      ingress.tls: false
      persistence.enabled: true
  polling:
    namespace: tick
    chart: telegraf-s
    version: 1.9.4
    repository: influx
  hosts:
    namespace: tick
    chart: telegraf-ds
    version: 1.9.4
    repository: influx
  alerts:
    namespace: tick
    chart: kapacitor
    repository: influx
    version: 1.5.2
  grafana:
    namespace: tick
    repository: stable
    version: 2.0.1
    set-values:
      adminPassword: ${GRAFANA_ADMIN_PASS}
      ingress:
        enabled: true
        hosts:
          - grafana-demo.sudermanjr.com
        tls:
          - secretName: grafana-tls-secret
            hosts:
              - grafana-demo.sudermanjr.com
      persistence.enabled: false
      ingress.annotations.kubernetes\.io\/ingress\.class: "nginx-ingress"
      ingress.annotations.certmanager\.k8s\.io\/cluster-issuer: letsencrypt-prod
      ingress.annotations.nginx\.ingress\.kubernetes\.io\/upstream-vhost: $$service_name.$$namespace.svc.cluster.local
      dashboardProviders:
        dashboardproviders\.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            updateIntervalSeconds: 10
            options:
              path: /var/lib/grafana/dashboards/default
      datasources:
        datasources\.yaml:
          apiVersion: 1
          datasources:
          - name: InfluxDB
            type: influxdb
            url: http://data-influxdb:8086
            access: proxy
            database: k6
            isDefault: true
          - name: prometheus
            type: prometheus
            url: http://linkerd-prometheus.linkerd:9090
            isDefault: false
      dashboards:
        default:
          k6-loadtests:
            gnetId: 2587
            revision: 3
            datasource: InfluxDB
  vote:
    namespace: vote
    hooks:
      pre_install:
        - kubectl create ns vote > /dev/null 2>&1 || true
        - kubectl annotate ns vote linkerd.io/inject=enabled --overwrite
    version: master
    repository:
      git: git@github.com:sudermanjr/reckoner-demo.git
      path: /charts
  load-generator:
    namespace: load
    hooks:
      pre_install:
        - kubectl create ns load > /dev/null 2>&1 || true
        - kubectl annotate ns load linkerd.io/inject=enabled --overwrite
    version: master
    repository:
      git: git@github.com:sudermanjr/reckoner-demo.git
      path: /charts
    set-values:
      replicaCount: 0
  basic-demo:
    namespace: demo
    hooks:
      pre_install:
        - kubectl create ns demo > /dev/null 2>&1 || true
        - kubectl annotate ns demo linkerd.io/inject=enabled --overwrite
        - kubectl label ns demo circleci-admin=yes --overwrite
    version: master
    repository:
      git: git@github.com:sudermanjr/reckoner-demo.git
      path: /charts
    set-values:
      ingress:
        enabled: true
        annotations:
          kubernetes\.io\/ingress\.class: "nginx-ingress"
          certmanager\.k8s\.io\/cluster-issuer: letsencrypt-prod
          nginx\.ingress\.kubernetes\.io\/upstream-vhost: $$service_name.$$namespace.svc.cluster.local
        paths:
          - /
        hosts:
          - meetup.sudermanjr.com
        tls:
          - secretName: basic-demo-tls
            hosts:
              - meetup.sudermanjr.com
    values-strings:
      ingress:
        annotations:
          nginx\.ingress\.kubernetes\.io\/ssl-redirect: "true"
